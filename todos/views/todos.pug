doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    title To-Do List
    link(rel="stylesheet", href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css")
    style.
      .completed-task {
        text-decoration: line-through;
        color: #6c757d;
      }

  body
    .container.mt-5
      h1.text-center.mb-4 To-Do List

      ul.list-group
        each todo in todos
          li.list-group-item.d-flex.justify-content-between.align-items-center(
            class=todo.completed ? 'list-group-item-success' : 'list-group-item-light'
          )
            .d-flex.align-items-center
              input.form-check-input.me-2(
                type="checkbox" 
                onchange=`toggleComplete(${todo.id})`
                checked=todo.completed
              )
              span(class=todo.completed ? 'completed-task' : '') #{todo.task}

            .actions
              if todo.completed
                span.badge.bg-success.float-end Completed
              else
                span.badge.bg-warning.text-dark.float-end Pending

              button.btn.btn-sm.btn-warning.me-2(onclick=`editTask(${todo.id})`) Edit
              button.btn.btn-sm.btn-danger(onclick=`deleteTask(${todo.id})`) Delete

      form.mt-4(action="/todos" method="POST")
        .mb-3
          label.form-label(for="task") New Task:
          input#task.form-control(type="text" name="task" required)
        button.btn.btn-primary(type="submit") Add Task

    script.
      function toggleComplete(id) {
        fetch(`/todos/${id}/toggle`, { method: 'PUT' })
          .then(response => response.json())
          .then(() => location.reload());
      }

      function editTask(id) {
        const newTask = prompt('Enter the updated task:');
        if (newTask) {
          fetch(`/todos/${id}`, {
            method: 'PUT',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ task: newTask })
          })
          .then(response => response.json())
          .then(() => location.reload());
        }
      }

      function deleteTask(id) {
        if (confirm('Are you sure you want to delete this task?')) {
          fetch(`/todos/${id}`, { method: 'DELETE' })
            .then(response => response.json())
            .then(() => location.reload());
        }
      }
